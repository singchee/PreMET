#Select required datafields
df1=select(PreMET_rawdata, c('AdmissionDT', 'DischargeDT', 'AdmissionTypeDesc', 'DiedDuringEpisodeFlag', 'dischargeMethod', 'PrimaryDx', 'RecipientLevel', 'SenderRole','PatientURNumber', 'PatientAge', 'PatientGender','Type', 'SentAt', 'Escalated', 'NumberRedirects','SentToAcceptedMins', 'AcceptedToCompletedMins','SpecialtyGroup', ))
# Identify and remove duplicate PREMETs based on Same Date/Time and and URN

df1$duplicate_time_URN = paste(df1$SentAt, df1$PatientURNumber) #concantate URN and time
df1=distinct(df1, df1$duplicate_time_URN, .keep_all = TRUE) # remove duplicates
df1$URN = df1$PatientURNumber #rename to URN

#Convert excel dates
library(openxlsx)
df1$AdmissionDT=convertToDateTime(df1$AdmissionDT)
df1$DischargeDT=convertToDateTime(df1$DischargeDT)

#split Premet Date & Time

df1$sent_date=as.Date(df1$SentAt)
df1$sent_time=format(df1$SentAt, "%H:%M")

# Assign unique ID to each PreMET
df1$PreMET_ID = seq.int(nrow(df1))

#Outcomes
df1$LOS=as.numeric(df1$DischargeDT-df1$AdmissionDT)/24 #derive LOS

sort(table(df1$PrimaryDx), decreasing=TRUE)[1:10]
sort(prop.table(table(df1$PrimaryDx)), decreasing=TRUE)[1:10]

# MET linkage

# filter MET by date range

MET_raw= read.csv(MET_raw)
MET = select(MET_raw, c('UR Number', 'Sum of Age', 'Gender', 'MET Call DateTime', 'Outcome' ))
MET$URN=MET$`UR Number`

MET$date= as.Date(MET$`MET Call DateTime`, origin="1970-01-01")
MET =filter(MET, MET$date >="2021-04-13" & MET$date <="2021-10-2")

# Generate specific dataset for MET/CB outcome

# Table 1: Select PREMET URNs that EXist in MET dataset


# Table 2: Select MET URNs that Exists in PreMET dataset

# no of afterhouse Premet
df1$afterhr = ifelse(format(df1$SentAt, "%H:%M") >= "08:00" & format(df1$SentAt, "%H:%M") <= "17:00", 0, 1) #check if after hours

# Generate field for 24 hour post PreMET time
df1$'24hour post Premet'= df2$SentAt +hours(24)

# DO a left outer join (1 onto 2)
merged = merge(x=df1,y=MET,by="URN", all.x=TRUE)

#Calculate no. of premets that have METs

merged_24hr = filter(merged, merged$`MET Call DateTime` >= merged$SentAt & merged$`MET Call DateTime`<=merged$`24hour post Premet`)
merged_24hr=distinct(merged_24hr, merged_24hr$PreMET_ID, .keep_all = TRUE)

#Merge MET to PreMET
merged2 = merge(x=df1,y=merged_24hr,by="PreMET_ID", all=TRUE)
merged2$outcome = ifelse(is.na(merged2$`MET Call DateTime`), 0, 1) #assign outcome code



